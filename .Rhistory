est2<=lm(sales~radio+newspaper,data=df)
est2<-lm(sales~radio+newspaper,data=df)
summary(est1)
summary(est2)
summary(est)
summary(est)$r.squared
summary(est1)$r.squared
summary(est2)$r.squared
summary(est)$adj.r.squared
summary(est1)$adj.r.squared
summary(est2)$adj.r.squared
est<-lm(salas~.,data=df)
df
est<-lm(salas~ . ,data=df)
est<-lm(sales~ . ,data=df)
summary(est)$r.squared
summary(est1)$r.squared
summary(est2)$r.squared
summary(est1)
summary(est2)
summary(est)
summary(est)$r.squared
summary(est1)$r.squared
summary(est2)$r.squared
summary(est)adj.$r.squared
summary(est)$adj.r.squared
summary(est1)$adj.r.squared
summary(est2)$adj.r.squared
est3<-lm(sales~TV+radio,data=df)
summary(est3)$adj.r.squared
summary(est3)$r.squared
t    <- subset(airquality, Month %in% 5:8)
t
p   <- subset(airquality, Month %in% 9)
p
p   <- subset(airquality, Month %in% 9)
fit <- lm(Ozone ~ Wind + Temp, data = t)
fit
summary(fit)
p$Ozone.p  <- predict(fit, newdata = p)
plot_ly(p, x = ~Wind, y = ~Temp, z = ~Ozone, name = "true") %>%
add_markers()  %>%
add_markers(x = ~Wind, y = ~Temp, z = ~Ozone.p, name = "pred")
p
fit <- lm(height_cm ~ sex, data = heights)
df<-height
df<-heights
df<-diamonds
df
est<-(price~carat+color,data=df)
est<-lm(price~carat+color,data=df)
summary(est)
df
diamonds$color <- factor(diamonds$color, ordered = FALSE)
diamonds
df
df$color <- factor(df$color, ordered = FALSE)
df
lm(price~color+carat,data=df)
est<-lm(price~color+carat,data=df)
summary(est)
Residual standard error: 1542 on 53937 degrees of freedom
Residual standard error: 1542 on 53937 degrees of freedom
df <- read.csv("Advertising.csv", row.names = 1)
df
fig <- plot_ly(df, x = ~TV, y = ~radio, z = ~sales, color = ~newspaper)
library(plotly)
fig
fig <- plot_ly(df, x = ~TV, y = ~radio, z = ~sales)
fig
df
est<-lm(sales~TV+radio,data=df)
df$pred<-predict(est)
df
fig <- plot_ly(df, x = ~TV, y = ~radio, z = ~sales,color="red")
fig
fig <- plot_ly(df, x = ~TV, y = ~radio, z = ~pred,color="blue")
fig
> coefs <- coef(est)
coefs <- coef(est)
coefs
planes3d(coefs[2], coefs[3], -1, coefs[1], col="blue", alpha=0.5)
install.packages("rgl")
library(rgl)
planes3d(coefs[2], coefs[3], -1, coefs[1], col="blue", alpha=0.5)
detach("package:rgl", unload = TRUE)
library(rgl)
detach("package:rgl", unload = TRUE)
install.packages("rgl")
library(rgl)
remove.packages("rgl")
install.packages("rgl")
library(rgl)
df
persp(df$TV,df$radio,df$pred)
fig <- plot_ly(df, x = ~TV, y = ~radio, z = ~sales,color="red")
fig
plot_ly(df,df, x = ~TV, y = ~radio, z = ~pred,color="blue")
fig2<-plot_ly(df,df, x = ~TV, y = ~radio, z = ~pred,color="blue")
fig2
Â¥df
df
fig <- plot_ly(df, x = ~TV, y = ~radio, z = ~pred,color="red")
fig
fig2 <- plot_ly(df, x = ~TV, y = ~radio, z = ~sales,color="red")
fig2
fig
add_trace(df, x = ~TV, y = ~radio, z = ~sales,color="red")
plot_ly(df, x = ~TV, y = ~radio, z = ~sales,color="red")
plot3d(df, x = ~TV, y = ~radio, z = ~sales,color="red")
fig2
df
est<-lm(sales~TV+radio+TV:radio)
est<-lm(sales~TV+radio+TV:radio,data=df)
summary(est)
df$linear<- lm(sales ~ TV + radio, data = df)$fitted.values
df$cross <- fit_cross$fitted.values
df$linear<- lm(sales ~ TV + radio, data = df)$fitted.values
df$cross <- fit_cross$fitted.values
fit<-est
fit
df$linear<- lm(sales ~ TV + radio, data = df)$fitted.values
df$cross <- fit_cross$fitted.values
df$linear<- lm(sales ~ TV + radio, data = df)$fitted.values
df
fit_cross <- lm(sales ~ TV + radio + TV:radio, data = df)
df$linear<- lm(sales ~ TV + radio, data = df)$fitted.values
df$cross <- fit_cross$fitted.values
fig <- plot_ly(df, x = ~TV, y = ~radio, z = ~sales, name = "true") %>%
add_markers() %>%
add_markers(df, x = ~TV, y = ~radio, z = ~linear, name = "lm") %>%
add_markers(df, x = ~TV, y = ~radio, z = ~cross, name = "cross")
a
fig
plot_ly(TV,sales,data=df)
plot_ly(df$TV,df$sales)
plot_ly(df,TV,sales,data=df)
plot_ly(df,TV,sales)
df
plot_ly(df,x=TV,y=sales)
plot_ly(df,x=~TV,y=s~ales)
fig<-plot_ly(df,x=~TV,y=s~ales)
fig
fig<-plot_ly(data=df,x=~TV,y=~sales)
fig
df
est<-lm(sales,sqrt(TV)+radio+TV+radio,data=df)
est<-lm(sales~sqrt(TV)+radio+TV+radio,data=df)
summary(est)
fit<-lm(sales~TV+radio+TV+radio,data=df)
summary(fit)
est<-lm(sales~sqrt(TV)+radio+TV:radio,data=df)
summary(fit)
est<-lm(sales~sqrt(TV)+radio+TV:radio,data=df)
summary(est)
fit<-lm(sales~TV+radio+TV:radio,data=df)
summary(fit)
fig<-plot_ly(data=df,x=~radio,y=~sales)
fig
df<-ability.cov
df
df<-attenu
df
df<-beaver1
df
df<-BJsales
df
df<-chickwts
df
df<-discoveries
df
df<-DNase
df
df<-freeny
df
df<-HairEyeColor
df
df<-infert
df
df<-read.csv(file="2019.csv")
df
df$Generosity
fit1=lm(Score~.- Overall.rank + Country.or.region,data=df)
summary(fit1)
fit1=lm(Score~.- Overall.rank,data=df)
summary(fit1)
df
csv<-read.csv(file="2019.csv")
csv[1000]
csv[10,10]
csv[7,10]
csv[3,10]
csv
csv[1,]
csv<-read.csv(file="2019.csv",header=TRUE)
csv
csv$Overall.rank
csv[1,1]
csv[5,10]
csv$Social.support
csv[,1]
csv[,3]
csv[5]
df
csv
csv$Score[1]
typeof(csv$Score[1])
fit=lm(csv$Score~df$GDP.per.capita+df$Social.support+df$Healthy.life.expectancy+df$Freedom.to.make.life.choices+df$Generosity+df$Perceptions.of.corruption)
summary(fit)
df<-read.csv(file="2019.csv")
fit=lm(Score ~. - Overall.rank - Country.or.region,data=df)
summary(fit)
fit1=lm(Score ~. - Overall.rank - Country.or -Generosity - Perceptions.of.corruption.region,data=df)
fit1=lm(Score ~. - Overall.rank - Country.or.region -Generosity - Perceptions.of.corruption,data=df)
summary(fit1)
corrplot(cor(df))
library(corrplot)
corrplot(cor(df))
df1<-cbind(df$Score,df$GDP.per.capita,df$Social.support,df$Healthy.life.expectancy,df$Freedom.to.make.life.choices)
df1
df1<-cname("Score","GDP.per.capita","Social.support","Healthy.life.expectancy","Freedom.to.make.life.choices")
df1<-colname("Score","GDP.per.capita","Social.support","Healthy.life.expectancy","Freedom.to.make.life.choices")
df1<-colnames("Score","GDP.per.capita","Social.support","Healthy.life.expectancy","Freedom.to.make.life.choices")
df1
names(df)<-("Score","GDP.per.capita","Social.support","Healthy.life.expectancy","Freedom.to.make.life.choices")
names(df)<-c("Score","GDP.per.capita","Social.support","Healthy.life.expectancy","Freedom.to.make.life.choices")
names(df1)<-c("Score","GDP.per.capita","Social.support","Healthy.life.expectancy","Freedom.to.make.life.choices")
df1
class(df1)
class(df)
df<-read.csv(file="2019.csv")
fit=lm(Score ~. - Overall.rank - Country.or.region,data=df)
summary(fit)
fit=lm(Score ~. - Overall.rank - Country.or -Generosity - Perceptions.of.corruption.region,data=df)
df<-read.csv(file="2019.csv")
fit=lm(Score ~. - Overall.rank - Country.or.region,data=df)
summary(fit)
fit1=lm(Score ~. - Overall.rank - Country.or -Generosity - Perceptions.of.corruption.region,data=df)
fit1=lm(Score ~. - Overall.rank - Country.or -Generosity - Perceptions.of.corruption.region,data=df)
df<-read.csv(file="2019.csv")
fit=lm(Score ~. - Overall.rank - Country.or.region,data=df)
summary(fit)
df
fit1=lm(Score ~. - Overall.rank - Country.or -Generosity - Perceptions.of.corruption.region,data=df)
fit1
df<-read.csv(file="2019.csv")
fit=lm(Score ~. - Overall.rank - Country.or.region,data=df)
summary(fit)
fit1=lm(Score ~. - Overall.rank - Country.or.region -Generosity - Perceptions.of.corruption,data=df)
summary(fit1)
df1<-data.frame(cbind(df$Score,df$GDP.per.capita,df$Healthy.life.expectancy,df$Freedom.to.make.life.choices))
df1
names(df1)<-c("a","v","c","d")
df1
df1<-data.frame(cbind(df$Score,df$GDP.per.capita,df$Social.support,df$Healthy.life.expectancy,df$Freedom.to.make.life.choices))
names(df1)<-c("Score","GDP.per.capita","Social.support","Healthy.life.expectancy","Freedom.to.make.life.choices")
df1
corrplot(cor(df1))
df1<-data.frame(cbind(df$GDP.per.capita,df$Social.support,df$Healthy.life.expectancy,df$Freedom.to.make.life.choices))
names(df1)<-c("GDP.per.capita","Social.support","Healthy.life.expectancy","Freedom.to.make.life.choices")
corrplot(cor(df1))
fit2<-(Score~GDP.per.capita+Social.support+Freedom.to.make.life.choices)
summary(fit2)
fit2<-lm(Score~GDP.per.capita+Social.support+Freedom.to.make.life.choices)
fit2<-lm(Score~GDP.per.capita+Social.support+Freedom.to.make.life.choices,data=df)
summary(fit2)
fit3<-lm(Score~GDP.per.capita++Freedom.to.make.life.choices,data=df)
summary(fit3)
fit3<-lm(Score~GDP.per.capita+Freedom.to.make.life.choices,data=df)
summary(fit3)
fit=lm(Score ~. - Overall.rank - Country.or.region,data=df)
summary(fit)
fit1=lm(Score ~. - Overall.rank - Country.or.region -Generosity - Perceptions.of.corruption,data=df)
summary(fit1)
fit2<-lm(Score~GDP.per.capita+Social.support+Freedom.to.make.life.choices,data=df)
summary(fit2)
fit3<-lm(Score~GDP.per.capita+Freedom.to.make.life.choices,data=df)
summary(fit3)
df1<-df[,-1]
df1
df1<-df[,-1-2]
df1
df1<-df[,-1-2]
df1<-df[,-1][,-1]
df1
df1<-df[,-1][,-1]
corrplot(cor(df1))
df1
fit4<-lm(Score~GDP.per.capita+Freedom.to.make.life.choices+Generosity - Perceptions.of.corruption,data=df)
summary(fit4)#0.70
fit4<-lm(Score~GDP.per.capita+Freedom.to.make.life.choices+Generosity + Perceptions.of.corruption,data=df)
summary(fit4)#0.70
fit4<-lm(Score~Freedom.to.make.life.choices,data=df)
summary(fit4)#0.70
fit4<-lm(Score~Social.support + Freedom.to.make.life.choices,data=df)
summary(fit4)#0.70
fit4<-lm(Score~Social.support + Healthy.life.expectancy + Freedom.to.make.life.choices,data=df)
summary(fit4)#0.70
fit2<-lm(Score~GDP.per.capita+Social.support+Freedom.to.make.life.choices,data=df)
summary(fit2)#0.74
fit3<-lm(Score~Social.support + Healthy.life.expectancy + Freedom.to.make.life.choices,data=df)
summary(fit3)#0.70
fit1=lm(Score ~. - Overall.rank - Country.or.region -Generosity - Perceptions.of.corruption,data=df)
summary(fit1)#0.76
fit=lm(Score ~. - Overall.rank - Country.or.region,data=df)
summary(fit)#0.77
fit4<-lm(Score~GDP.per.capita+Freedom.to.make.life.choices,data=df)
summary(fit4)#0.70
fit5<-lm(Score~GDP.per.capita+Freedom.to.make.life.choices+Generosity+Perceptions.of.corruption,data=df)
summary(fit5)#0.709
fit6<-lm(Score~GDP.per.capita+Freedom.to.make.life.choices+Perceptions.of.corruption,data=df)
summary(fit6)#0.7093
fit7<-lm(Score~GDP.per.capita+Social.support,data=df)
summary(fit7)
fit1=lm(Score ~. - Overall.rank - Country.or.region -Generosity - Perceptions.of.corruption,data=df)
summary(fit1)#0.7649
fit=lm(Score ~. - Overall.rank - Country.or.region,data=df)
summary(fit)#0.7703
fit1=lm(Score ~. - Overall.rank - Country.or.region -Generosity - Perceptions.of.corruption,data=df)
summary(fit1)#0.7649
fit7<-lm(Score~GDP.per.capita,data=df)
summary(fit7)#0.6998
fit7<-lm(df$Score,df$Social.support)
fit7<-lm(df$Score~df$Social.support)
summary(fit7)#0.6998
fit7<-lm(df$Score~df$Healthy.life.expectancy)
summary(fit7)#0.6998
fit7<-lm(df$Score~df$Freedom.to.make.life.choices)
summary(fit7)#0.6998
fit7<-lm(df$Score~df$Generosity
summary(fit7)#0.6998
fit7<-lm(df$Score~df$Generosity)
summary(fit7)#0.6998
fit7<-lm(df$Score~df$Perceptions.of.corruption)
summary(fit7)#0.6998
fit6<-lm(Score~GDP.per.capita+Freedom.to.make.life.choices+Perceptions.of.corruption,data=df)
summary(fit6)#0.7
fit1<-lm(Score ~. - Overall.rank - Country.or.region -Generosity - Perceptions.of.corruption,data=df)
summary(fit1)#0.7649
fit1<-lm(Score ~. - Overall.rank - Country.or.region - Perceptions.of.corruption,data=df)
summary(fit1)#0.7649
fit=lm(Score ~. - Overall.rank - Country.or.region,data=df)
summary(fit)#0.7703
fit11<-lm(Score ~. - Overall.rank - Country.or.region - Perceptions.of.corruption,data=df)
summary(fit11)#0.7669
0.7703/0.7649
df<-read.csv(file="2019.csv")
fit=lm(Score ~. - Overall.rank - Country.or.region,data=df)
summary(fit)
fit1<-lm(Score ~. - Overall.rank - Country.or.region -Generosity - Perceptions.of.corruption,data=df)
summary(fit1)#0.7649
anava(fit,fit1)
anava(fit1,fit)
anova(fit1,fit)
0.0063*149/(2*0.53335)
0.0063*149
0.9387/0.5335
1.759513/2
fit3<-lm(Score ~. - Overall.rank - Country.or.region - Generosity,data=df)
summary(fit3)#0.7669
cor(df1)
plot_ly(df$Score,df$GDP.per.capita)
library(plotly)
plot_ly(df$Score,df$GDP.per.capita)
plot_ly(df,x=~Score,y=~GDP.per.capita)
plot_ly(df,x=~Score,y=~GDP.per.capita)
plot_ly(df,x=~Score,y=~Social.support)
fit3<-lm(Score~Social.support + Healthy.life.expectancy + Freedom.to.make.life.choices,data=df)
summary(fit3)#0.7447
df<-read.csv(file="2019.csv")
fit9<-lm(Score ~Social.support:sqrt(Freedom.to.make.life.choices)+GDP.per.capita:Healthy.life.expectancy:Social.support,data=df)
summary(fit8)#0.8117
fit9<-lm(Score ~Social.support:sqrt(Freedom.to.make.life.choices)+GDP.per.capita:Healthy.life.expectancy:Social.support,data=df)
summary(fit9)#0.8117
df1<-df[,-1][,-1]
corrplot(cor(df1))
df1
df1$S-F<-df1$Social.support*df$Freedom.to.make.life.choices
df1$S.F<-df1$Social.support*df$Freedom.to.make.life.choices
df1$S.G.H<-df1$GDP.per.capita*df1$Social.support*df$Healthy.life.expectancy
df
df1
df1$S.F<-df1$Social.support*df$Freedom.to.make.life.choices
df1$S.G.H<-df1$GDP.per.capita*df1$Social.support*df$Healthy.life.expectancy
plot_ly(df1, x = ~S.F, y = ~Score)
library(plotly)
df1$S.F<-df1$Social.support*df$Freedom.to.make.life.choices
df1$S.G.H<-df1$GDP.per.capita*df1$Social.support*df$Healthy.life.expectancy
plot_ly(df1, x = ~S.F, y = ~Score)
plot_ly(df1, x = ~S.G.H, y = ~Score)
plot_ly(df1, x = ~S.F, y = ~Score)
plot_ly(df1, x = ~S.G.H, y = ~Score)
plot_ly(df1, x = ~S.F, y = ~Score)
plot_ly(df1, x = ~Freedom.to.make.life.choices, y = ~Score)
plot_ly(df1, x = ~S.F, y = ~Score)
fit9<-lm(Score ~sqrt(Social.support:Freedom.to.make.life.choices)+GDP.per.capita:Healthy.life.expectancy:Social.support,data=df)
fit9<-lm(Score ~sqrt(Social.support):sqrt(Freedom.to.make.life.choices)+GDP.per.capita:Healthy.life.expectancy:Social.support,data=df)
summary(fit9)#0.8117
plot_ly(df1, x = ~S.G.H, y = ~Score)
fit9<-lm(Score ~sqrt(Social.support):sqrt(Freedom.to.make.life.choices)+sqrt(GDP.per.capita):sqrt(Healthy.life.expectancy):sqrt(Social.support,data=df))
df<-read.csv(file="2019.csv")
fit9<-lm(Score ~sqrt(Social.support):sqrt(Freedom.to.make.life.choices)+sqrt(GDP.per.capita):sqrt(Healthy.life.expectancy):sqrt(Social.support,data=df))
fit9<-lm(Score ~sqrt(Social.support):sqrt(Freedom.to.make.life.choices)+sqrt(GDP.per.capita):sqrt(Healthy.life.expectancy):sqrt(Social.support),data=df)
summary(fit9)#0.8108
df<-read.csv(file="2019.csv")
fit1=lm(Score ~. - Overall.rank - Country.or.region,data=df)
summary(fit1)#0.7703
fit2<-lm(Score ~. - Overall.rank - Country.or.region -Generosity - Perceptions.of.corruption,data=df)
summary(fit2)#0.7649
fit3<-lm(Score ~. - Overall.rank - Country.or.region - Generosity,data=df)
summary(fit3)#0.7703
df1<-df[,-1][,-1]
corrplot(cor(dfz1))
fit9<-lm(Score ~sqrt(Social.support):sqrt(Freedom.to.make.life.choices)+sqrt(GDP.per.capita):sqrt(Healthy.life.expectancy):sqrt(Social.support),data=df)
summary(fit9)#0.8108
fit9<-lm(Score ~sqrt(Social.support):sqrt(Freedom.to.make.life.choices)+GDP.per.capita:Healthy.life.expectancy:Social.support,data=df)
summary(fit9)#0.8108
df1$S.F<-df1$Social.support*df$Freedom.to.make.life.choices
df1$S.G.H<-df1$GDP.per.capita*df1$Social.support*df$Healthy.life.expectancy
plot_ly(df1, x = ~S.F, y = ~Score)
library(plotly)
df1$S.F<-df1$Social.support*df$Freedom.to.make.life.choices
df1$S.G.H<-df1$GDP.per.capita*df1$Social.support*df$Healthy.life.expectancy
plot_ly(df1, x = ~S.F, y = ~Score)
plot_ly(df1, x = ~S.G.H, y = ~Score)
plot_ly(df1, x = ~S.F, y = ~Score)
install.packages("dematel")
library(dematel)
my_data<-data.frame(
timetable<-c(0,0,0,0),
difficuly_to_get_credit<-c(1,0,1,1),
populality<-c(1,2,0,2),
interest<-c(0,1,0,0)
)
my_data
my_data<-data.frame(
timetable=c(0,0,0,0),
difficuly_to_get_credit=c(1,0,1,1),
populality=c(1,2,0,2),
interest=c(0,1,0,0)
)
my_data
row.names(my_data)<-c("timetable","difficuly_to_get_credit","populality","interest")
my_data
normalize_data(my_data, data_control = F)
normalize_data(my_data, data_control = T)
normalize_data(my_data, data_control = F)
total_relationship_matrix(my_data)
relationships_between_criteria(my_data, data_control = T)
visualize(my_data)
my_data
total_relationship_matrix(my_data)
visualize(my_data)
my_data
visualize(my_data)
relationships_between_criteria(my_data, data_control = T)
visualize(my_data)
setwd("~/Desktop/2A/æ°çææ³1")
library(openxlsx)
x<-read.xlsx("./SDR-2022-Database.xlsx",sheet=4)#save Raw Data sheet
sdg1_wpc<-x$`Poverty.headcount.ratio.at.$1.90/day.(%)`
sdg1_wpc_norm<-x$`Normalized.Score:.sdg1_wpc`
sdg1_wpc_color<-x$`Dashboard.Color:.sdg1_wpc`
plot(sdg1_wpc,sdg1_wpc_norm,col=sdg1_wpc_color)
sdg1_320pov<-x$`Poverty.headcount.ratio.at.$3.20/day.(%)`
sdg1_320pov_norm<-x$`Normalized.Score:.sdg1_320pov`
sdg1_320pov_color<-x$`Dashboard.Color:.sdg1_320pov`
plot(sdg1_320pov,sdg1_320pov_norm,col=sdg1_320pov_color)
sdg1_wpc_norm_yellow<-subset(x,x$`Dashboard.Color:.sdg1_wpc`=="yellow",select = `Normalized.Score:.sdg1_wpc`)
sdg1_wpc_norm_orange<-subset(x,x$`Dashboard.Color:.sdg1_wpc`=="orange",select = `Normalized.Score:.sdg1_wpc`)
sdg1_wpc_norm_red<-subset(x,x$`Dashboard.Color:.sdg1_wpc`=="red",select = `Normalized.Score:.sdg1_wpc`)
min(sdg1_wpc_norm_yellow,na.rm=TRUE)#89.97
subset(x,x$`Normalized.Score:.sdg1_wpc`==89.97,select=`Poverty.headcount.ratio.at.$1.90/day.(%)`)#7.282
max(sdg1_wpc_norm_orange,na.rm=TRUE)#88.14
subset(x,x$`Normalized.Score:.sdg1_wpc`==88.14,select=`Poverty.headcount.ratio.at.$1.90/day.(%)`)#8.61
sdg1_320pov_norm_yellow<-subset(x,x$`Dashboard.Color:.sdg1_320pov`=="yellow",select = `Normalized.Score:.sdg1_320pov`)
sdg1_320pov_norm_orange<-subset(x,x$`Dashboard.Color:.sdg1_320pov`=="orange",select = `Normalized.Score:.sdg1_320pov`)
sdg1_320pov_norm_red<-subset(x,x$`Dashboard.Color:.sdg1_320pov`=="red",select = `Normalized.Score:.sdg1_320pov`)
min(sdg1_320pov_norm_yellow,na.rm=TRUE)#85.65
subset(x,x$`Normalized.Score:.sdg1_320pov`==85.65,select=`Poverty.headcount.ratio.at.$3.20/day.(%)`)#7.39
max(sdg1_320pov_norm_orange,na.rm=TRUE)#85.282
subset(x,x$`Normalized.Score:.sdg1_320pov`==85.282,select=`Poverty.headcount.ratio.at.$3.20/day.(%)`)#7.58
install.packages(stringr)
library(stringr)
sdg1<-x$Goal.1.Score
sdg1_color<-x$Goal.1.Dash
#å³3
plot((sdg1_wpc_norm+sdg1_320pov_norm)*0.5,sdg1,col=sdg1_color)
sdg1_color_num<-as.integer(  x$Goal.1.Dash %>%
str_replace_all(c("green"="3","yellow"="2","orange"="1","red"="0")))
sdg1_opecpov<-x$`Poverty.rate.after.taxes.and.transfers.(%)`
sdg1_with_opecpov<-data.frame(color=sdg1_color_num[!is.na(sdg1_opecpov)],score=sdg1[!is.na(sdg1_opecpov)],opecpov=sdg1_opecpov[!is.na(sdg1_opecpov)])
result<-lm(color~score+opecpov,sdg1_with_opecpov)
summary(result)
sdg1_without_opecpov<-data.frame(color=sdg1_color_num[is.na(sdg1_opecpov)],sdg1_wpc_norm=sdg1_wpc_norm[is.na(sdg1_opecpov)],sdg1_320pov_norm=sdg1_320pov_norm[is.na(sdg1_opecpov)],score=sdg1[is.na(sdg1_opecpov)])
library(corrplot)
corrplot::corrplot(cor(iris[,-5]))
plot(sdg1_without_opecpov$sdg1_320pov_norm,sdg1_without_opecpov$color)
plot((sdg1_without_opecpov$sdg1_320pov_norm+sdg1_without_opecpov$sdg1_wpc_norm)*0.5,sdg1_without_opecpov$color)
plot(sdg1_with_opecpov$opecpov,sdg1_with_opecpov$color)
plot(sdg1_without_opecpov$sdg1_wpc_norm,sdg1_without_opecpov$sdg1_320pov_norm)
corrplot::corrplot(cor(sdg1_without_opecpov))
corrplot(cor(sdg1_without_opecpov))
sdg1_without_opecpov
corrplot(cor(sdg1_without_opecpov,na.rm=TRUE))
cor(sdg1_without_opecpov)
cor(sdg1_with_opecpov)
sdg1_with_opecpov
corrplot(cor(sdg1_without_opecpov,use = "complete.obs"))
plot(sdg1_without_opecpov$score,sdg1_without_opecpov$color)
plot(sdg1_with_opecpov$opecpov,sdg1_with_opecpov$color)
plot(sdg1_without_opecpov$score,sdg1_without_opecpov$color)
